package com.bns.Database;import java.util.*;import android.content.*;import android.database.*;import android.database.sqlite.*;import android.util.*;import com.bns.DataClass.*;public class DBQueryWord implements DBQuery{	private String databaseTable = null;	private String databaseName = null;	private Context context = null;	private int mode = Context.MODE_PRIVATE;	static public enum PROBLEMTYPE {WORD,MEAN};	public DBQueryWord(String databaseTable, String databaseName,			Context context) {		super();		this.databaseTable = databaseTable;		this.databaseName = databaseName;		this.context = context;	}		public String getDatabaseTable() {		return databaseTable;	}	public void setDatabaseTable(String databaseTable) {		this.databaseTable = databaseTable;	}	public String getDatabaseName() {		return databaseName;	}	public void setDatabaseName(String databaseName) {		this.databaseName = databaseName;	}	@Override	public SQLiteDatabase DBCreate() {		// TODO Auto-generated method stub		try		{			SQLiteDatabase db = context.openOrCreateDatabase(this.databaseName, mode, null);			Log.d("Create db", "SUCCESS");			return db;		}		catch(Exception e)		{			Error.ErrorEvent(Error.CREATEDB);		}		return null;	}	@Override	public void TableCreate(SQLiteDatabase db) {		// TODO Auto-generated method stub		String sql = "CREATE TABLE IF NOT EXISTS " + this.databaseTable + "(ID INTEGER PRIMARY KEY AUTOINCREMENT," +				"WORD TEXT NOT NULL," +				"MEAN TEXT NOT NULL)";		try		{			db.execSQL(sql);			Log.d("CREATE TABLE", "SUCCESS");		}		catch(Exception e)		{			Error.ErrorEvent(Error.CREATETABLE);		}	}	@Override	public void Insert(SQLiteDatabase db, Object obj) {		// TODO Auto-generated method stub		Word word = (Word)obj;		String sql = "INSERT INTO " + this.databaseTable + "(ID,WORD,MEAN) VALUES('" +				""+word.getId()+"','" +				""+word.getWord()+"','" +				""+word.getMean()+"')";		try		{			db.execSQL(sql);			Log.d("Insert Word Row", "SUCCESS");		}		catch(Exception e)		{			Error.ErrorEvent(Error.INSERT);		}	}	@Override	public void DeleteObject(SQLiteDatabase db, Object obj) {		// TODO Auto-generated method stub		Word word = (Word)obj;		String sql = "UPDATE "+ this.databaseTable + " SET WORD = 'DEL', MEAN = 'DEL' WHERE WORD = '"+word.getWord()+"'";				try		{			db.execSQL(sql);			Log.d("DELETE", "SUCCESS");		}		catch(Exception e)		{			Error.ErrorEvent(Error.DELETE);		}	}	@Override	public void DeleteAll(SQLiteDatabase db) {		// TODO Auto-generated method stub		String sql = "DROP TABLE " + this.databaseTable;		try		{			db.execSQL(sql);			Log.d("DELETE ALL", "SUCCESS");		}		catch(Exception e)		{			Error.ErrorEvent(Error.DELETE);		}	}	@Override	public void Update(SQLiteDatabase db, Object newObj) {		// TODO Auto-generated method stub		Word word = (Word)newObj;		String sql = "UPDATE " + this.databaseTable + " SET WORD = '"+word.getWord()+"',MEAN='"+word.getMean()+"' WHERE ID = '"+word.getId()+"'";		try		{			db.execSQL(sql);			Log.d("UPDATE", "SUCCESS");		}		catch(Exception e)		{			Error.ErrorEvent(Error.UPDATE);		}	}		public List<String> wordList(SQLiteDatabase db)	{		List<String> list = new ArrayList<String>();		String sql = "SELECT WORD FROM " +  this.databaseTable;		Cursor cursor = db.rawQuery(sql, null);		while(cursor.moveToNext())		{			String word = cursor.getString(0);			list.add(word);			word = null;		}		cursor = null;		return list;	}		public List<String> meanList(SQLiteDatabase db)	{		List<String>list = new ArrayList<String>();		String sql = "SELECT MEAN FROM " + this.databaseTable;		Cursor cursor = db.rawQuery(sql, null);		while(cursor.moveToNext())		{			String mean = cursor.getString(0);			list.add(mean);			mean = null;		}		cursor = null;		return list;	}		public int countID(SQLiteDatabase db)	{		int result = 0;		String sql = "SELECT COUNT(*) FROM " + this.databaseTable;		Cursor cursor = db.rawQuery(sql, null);		while(cursor.moveToNext())		{			result = cursor.getInt(0);		}		cursor = null;		return result;	}		public String getData(SQLiteDatabase db,String selected,DBQueryWord.PROBLEMTYPE problem)	{		String result = null;		String sql = null;		Cursor cursor = null;		if(problem == DBQueryWord.PROBLEMTYPE.WORD)		{			sql = "SELECT WORD FROM " + this.databaseTable + " WHERE MEAN ='"+selected+"'";			}		else if(problem == DBQueryWord.PROBLEMTYPE.MEAN)		{			sql = "SELECT MEAN FROM " + this.databaseTable + " WHERE WORD ='"+selected+"'";		}		else		{			return null;		}				cursor = db.rawQuery(sql, null);		while(cursor.moveToNext())		{			result = cursor.getString(0);		}				return result;	}}