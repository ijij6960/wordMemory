package com.bns.View;import java.io.*;import java.util.*;import org.json.*;import android.app.*;import android.content.*;import android.os.*;import android.util.*;import android.view.*;import android.widget.*;import com.bns.Common.*;import com.bns.CustomAdapter.*;import com.bns.Eliars.*;public class ProblemView extends Activity {	int chapterNumber = 0;	int problemCounter = 0;		ArrayList<String> spellList = null;	ArrayList<String> meanList = null;		@Override	protected void onCreate(Bundle savedInstanceState) {		// TODO Auto-generated method stub		super.onCreate(savedInstanceState);		this.setContentView(R.layout.list_view);				Common.ViewList.put("ProblemView", this);				chapterNumber = this.getIntent().getIntExtra("Chapter", 0);		if(chapterNumber == 0)		{			Intent intent = new Intent(this,ChapterView.class);			this.startActivity(intent);			Common.ViewList.get("ProblemView").finish();		}		else		{			this.parsingJson();			this.getList();						List<String> temp = this.setList(spellList,5);			this.setListView(temp);		}	}		private void getList()	{		spellList = new ArrayList<String>();		meanList = new ArrayList<String>();		int size = Common.wordList.size();				for(int index = 0;index < size; index++)		{			HashMap<String,String> temp = Common.wordList.get(index);			String spell = temp.get("spell");			String mean = temp.get("mean");						spellList.add(spell);			meanList.add(mean);		}	}		private List<String> setList(List<String> list,int wantSize)	{    	TreeSet<String> tempSet = new TreeSet<String>();    	List<String>result = new ArrayList<String>();    	int range = list.size();    	    	while(tempSet.size() < wantSize)    	{    		int index = (int)(Math.random()*range);    		String tempString = list.get(index);    		tempSet.add(tempString);    	}    	    	while(tempSet.size() != 0)    	{    		String first = tempSet.first();    		result.add(first);    		tempSet.remove(first);    	}    	return result;	}		private void setListView(List<String> displayList)	{		ProblemListAdapter adapter = new ProblemListAdapter(this, displayList);		ListView listView = (ListView)this.findViewById(R.id.answer);		listView.setAdapter(adapter);	}		private String json2String(int chapterNumber)	{		String json = null;				try		{			InputStream is = this.getAssets().open("chapter"+ chapterNumber +".json");			int size = is.available();						byte [] buffer = new byte[size];						is.read(buffer);			is.close();			json = new String(buffer,"UTF-8");		}		catch(Exception e)		{			Toast.makeText(this, "JSON File Not Exist", Toast.LENGTH_SHORT).show();		}				return json;	}	private void parsingJson()	{		String json = this.json2String(chapterNumber);		try		{			JSONObject jObj = new JSONObject(json);			JSONArray jArray = jObj.getJSONArray("word");			ArrayList<HashMap<String,String>> arrayList = new ArrayList<HashMap<String,String>>();			HashMap<String,String> word = null;			int size = jArray.length();						for(int index = 0;index < size; index++)			{				word = new HashMap<String,String>();				JSONObject jWord = jArray.getJSONObject(index);				String jSpell = jWord.getString("spell");				String jMean = jWord.getString("mean");				word.put("spell", jSpell);				word.put("mean", jMean);				arrayList.add(word);								jSpell = null;				jMean = null;				word = null;			}						Common.wordList = arrayList;		}		catch(Exception e)		{			Toast.makeText(this, "Error Json Parsing", Toast.LENGTH_SHORT).show();		}			}		@Override	public boolean onKeyDown(int keyCode, KeyEvent event) {		// TODO Auto-generated method stub		switch(keyCode)		{		case KeyEvent.KEYCODE_BACK:			Intent intent = new Intent(this,ChapterView.class);			this.startActivity(intent);			Common.ViewList.get("ProblemView").finish();			return true;		default:			return super.onKeyDown(keyCode, event);		}	}		@Override	public boolean onCreateOptionsMenu(Menu menu) {		// TODO Auto-generated method stub		menu.add(0, 0, 0, "WORD Problem");		menu.add(0, 1, 0, "MEAN Problem");		menu.add(0, 2, 0, "BACK");		menu.add(0 ,3 ,0 ,"QUIT");				return true;	}	@Override	public boolean onOptionsItemSelected(MenuItem item) {		// TODO Auto-generated method stub		int itemID = item.getItemId();		switch(itemID)		{		case 0:			return true;		case 1:			return true;		case 2:			return true;		case 3:			return true;		default:			return super.onOptionsItemSelected(item);		}	}	public void onClicked(View view)	{		Toast.makeText(this, "Clicked", Toast.LENGTH_SHORT).show();	}}